suite: Data volumes
templates:
  - volumes.yaml
  - backup-volume.yaml
tests:
  - it: public files volume should be configurable
    template: volumes.yaml
    set:
      mounts:
        example-files:
          enabled: true
          storage: 123Gi
          storageClassName: silta-shared

    asserts:
      - documentIndex: 1
        equal:
          path: spec.storageClassName
          value: silta-shared
      - documentIndex: 1
        equal:
          path: spec.resources.requests.storage
          value: 123Gi
  
  - it: backup pv creation when csi-rclone provisioner is unavailable
    template: backup-volume.yaml
    set:
      backup:
        enabled: true
        storage: 123Gi
        storageClassName: silta-shared
    asserts:
      - documentIndex: 0
        equal:
          path: kind
          value: PersistentVolume
      - documentIndex: 0
        equal:
          path: metadata.name
          value: RELEASE-NAME-b6b6854-backup
      - documentIndex: 1
        equal:
          path: kind
          value: PersistentVolumeClaim
      - documentIndex: 1
        equal:
          path: metadata.name
          value: RELEASE-NAME-backup
      - documentIndex: 1
        exists:
          path: spec.selector
      - documentIndex: 1
        equal:
          path: spec.selector.matchLabels.name
          value: RELEASE-NAME-b6b6854-backup
  - it: backup pv creation when csi-rclone provisioner is available (silta-shared storage class)
    template: backup-volume.yaml
    capabilities:
      apiVersions:
        - silta.wdr.io/v1
    set:
      backup:
        enabled: true
        storage: 123Gi
        storageClassName: silta-shared
    asserts:
      - documentIndex: 0
        equal:
          path: kind
          value: PersistentVolumeClaim
      - documentIndex: 0
        equal:
          path: metadata.name
          value: RELEASE-NAME-backup2
      - documentIndex: 0
        notExists:
          path: spec.selector
  - it: backup pv creation when csi-rclone provisioner is available (non-silta-shared storage class)
    template: backup-volume.yaml
    capabilities:
      apiVersions:
        - silta.wdr.io/v1
    set:
      backup:
        enabled: true
        storage: 123Gi
        storageClassName: foo
    asserts:
      - documentIndex: 0
        equal:
          path: kind
          value: PersistentVolumeClaim
      - documentIndex: 0
        equal:
          path: metadata.name
          value: RELEASE-NAME-backup
      - documentIndex: 0
        notExists:
          path: spec.selector
  - it: shell key pv creation when csi-rclone provisioner is not available
    template: volumes.yaml
    set:
      shell:
        enabled: true
        mount:
          storageClassName: silta-shared
    asserts:
      - documentIndex: 0
        equal:
          path: kind
          value: PersistentVolume
      - documentIndex: 0
        equal:
          path: metadata.name
          value: RELEASE-NAME-b6b6854-shell-keys
      - documentIndex: 1
        equal:
          path: kind
          value: PersistentVolumeClaim
      - documentIndex: 1
        equal:
          path: metadata.name
          value: RELEASE-NAME-shell-keys
      - documentIndex: 1
        exists:
          path: spec.selector
      - documentIndex: 1
        equal:
          path: spec.selector.matchLabels.name
          value: RELEASE-NAME-b6b6854-shell-keys
  - it: shell key pv creation when csi-rclone provisioner is available (silta-shared storage class)
    template: volumes.yaml
    capabilities:
      apiVersions:
        - silta.wdr.io/v1
    set:
      shell:
        enabled: true
        mount:
          storageClassName: silta-shared
    asserts:
      - documentIndex: 0
        equal:
          path: kind
          value: PersistentVolumeClaim
      - documentIndex: 0
        equal:
          path: metadata.name
          value: RELEASE-NAME-shell-keys2
      - documentIndex: 0
        notExists:
          path: spec.selector
  - it: shell key pv creation when csi-rclone provisioner is available (non-silta-shared storage class)
    template: volumes.yaml
    capabilities:
      apiVersions:
        - silta.wdr.io/v1
    set:
      shell:
        enabled: true
        mount:
          storageClassName: foo
    asserts:
      - documentIndex: 0
        equal:
          path: kind
          value: PersistentVolumeClaim
      - documentIndex: 0
        equal:
          path: metadata.name
          value: RELEASE-NAME-shell-keys
      - documentIndex: 0
        notExists:
          path: spec.selector
  - it: custom mount pv creation when csi-rclone provisioner is not available
    template: volumes.yaml
    set:
      mounts:
        foo:
          enabled: true
          storageClassName: silta-shared
    asserts:
      - documentIndex: 0
        equal:
          path: kind
          value: PersistentVolume
      - documentIndex: 0
        equal:
          path: metadata.name
          value: RELEASE-NAME-b6b6854-foo
      - documentIndex: 1
        equal:
          path: kind
          value: PersistentVolumeClaim
      - documentIndex: 1
        equal:
          path: metadata.name
          value: RELEASE-NAME-foo
      - documentIndex: 1
        exists:
          path: spec.selector
      - documentIndex: 1
        equal:
          path: spec.selector.matchLabels.name
          value: RELEASE-NAME-b6b6854-foo
  - it: custom mount pv creation when csi-rclone provisioner is available (silta-shared storage class)
    template: volumes.yaml
    capabilities:
      apiVersions:
        - silta.wdr.io/v1
    set:
      mounts:
        foo:
          enabled: true
          storageClassName: silta-shared
    asserts:
      - documentIndex: 0
        equal:
          path: kind
          value: PersistentVolumeClaim
      - documentIndex: 0
        equal:
          path: metadata.name
          value: RELEASE-NAME-foo2
      - documentIndex: 0
        notExists:
          path: spec.selector
  - it: custom mount pv creation when csi-rclone provisioner is available (non-silta-shared storage class)
    template: volumes.yaml
    capabilities:
      apiVersions:
        - silta.wdr.io/v1
    set:
      mounts:
        foo:
          enabled: true
          storageClassName: foo
    asserts:
      - documentIndex: 0
        equal:
          path: kind
          value: PersistentVolumeClaim
      - documentIndex: 0
        equal:
          path: metadata.name
          value: RELEASE-NAME-foo
      - documentIndex: 0
        notExists:
          path: spec.selector
