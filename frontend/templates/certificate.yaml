{{- $context_ingress := .Values.ingress.default }}
{{- $context_ssl := .Values.ssl }}
{{- if $context_ingress.tls }}
{{- if has $context_ssl.issuer (list "letsencrypt" "letsencrypt-staging") }}
apiVersion: {{ include "cert-manager.api-version" . | trim }}
kind: Certificate
metadata:
  name: {{ .Release.Name }}-crt
  annotations:
    cert-manager.io/issue-temporary-certificate: "true"
    acme.cert-manager.io/http01-override-ingress-name: "{{ $.Release.Name }}-nginx"
  labels:
    {{- include "frontend.release_labels" . | nindent 4 }}
spec:
  secretName: {{ .Release.Name }}-tls
  dnsNames:
  - {{ template "frontend.domain" . }}
  issuerRef:
    name: {{ $context_ssl.issuer }}
    kind: ClusterIssuer
{{- if eq ( include "cert-manager.api-version" . | trim ) "certmanager.k8s.io/v1alpha1" }}
  acme:
    config:
      - http01:
          ingress: {{ .Release.Name }}-nginx
        domains:
          - {{ template "frontend.domain" . }}
{{- end }}
---
{{- range $index, $prefix := .Values.domainPrefixes }}
{{- $params := dict "prefix" $prefix }}
apiVersion: {{ include "cert-manager.api-version" $ | trim }}
kind: Certificate
metadata:
  name: {{ $.Release.Name }}-crt-p{{ $index }}
  annotations:
    cert-manager.io/issue-temporary-certificate: "true" 
    acme.cert-manager.io/http01-override-ingress-name: "{{ $.Release.Name }}-nginx"
  labels:
    {{- include "frontend.release_labels" $ | nindent 4 }}
spec:
  secretName: {{ $.Release.Name }}-tls-p{{ $index }}
  dnsNames:
  - '{{ template "frontend.domain" (merge $params $ ) }}'
  issuerRef:
    name: {{ $context_ssl.issuer }}
    kind: ClusterIssuer
{{- if eq ( include "cert-manager.api-version" $ | trim ) "certmanager.k8s.io/v1alpha1" }}
  acme:
    config:
      - http01:
          ingress: {{ $.Release.Name }}-nginx
        domains:
          - '{{ template "frontend.domain" (merge $params $ ) }}'
{{- end }}
---
{{- end }}

{{- else if eq $context_ssl.issuer "selfsigned" }}
apiVersion: {{ include "cert-manager.api-version" . | trim }}
kind: Certificate
metadata:
  name: {{ .Release.Name }}-crt
  labels:
    {{- include "frontend.release_labels" . | nindent 4 }}
spec:
  secretName: {{ .Release.Name }}-tls
  duration: 2160h
  renewBefore: 150h 
  commonName: {{ template "frontend.domain" . }}
  dnsNames:
  - {{ template "frontend.domain" . }}
  issuerRef:
    name: {{ $context_ssl.issuer }}
    kind: ClusterIssuer
---
{{- range $index, $prefix := .Values.domainPrefixes }}
{{- $params := dict "prefix" $prefix  -}}
apiVersion: {{ include "cert-manager.api-version" $ | trim }}
kind: Certificate
metadata:
  name: {{ $.Release.Name }}-crt-p{{ $index }}
  labels:
    {{- include "frontend.release_labels" $ | nindent 4 }}
spec:
  secretName: {{ $.Release.Name }}-tls-p{{ $index }}
  duration: 2160h
  renewBefore: 150h
  commonName: {{ include "frontend.domain" (merge $params $ ) }}
  dnsNames:
    - '{{ include "frontend.domain" (merge $params $ ) }}'
  issuerRef:
    name: {{ $context_ssl.issuer }}
    kind: ClusterIssuer
---
{{- end }}

{{- else if eq $context_ssl.issuer "custom" }}
{{- if not $context_ssl.existingTLSSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-tls-custom
  labels:
    {{- include "frontend.release_labels" . | nindent 4 }}
type: kubernetes.io/tls
data:
  tls.ca: {{ $context_ssl.ca | b64enc }}
  tls.crt: {{ $context_ssl.crt | b64enc }}
  tls.key: {{ $context_ssl.key | b64enc }}
---
{{- range $index, $prefix := .Values.domainPrefixes }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $.Release.Name }}-tls-p{{ $index }}-custom
  labels:
    {{- include "frontend.release_labels" $ | nindent 4 }}
type: kubernetes.io/tls
data:
  tls.ca: {{ $context_ssl.ca | b64enc }}
  tls.crt: {{ $context_ssl.crt | b64enc }}
  tls.key: {{ $context_ssl.key | b64enc }}
---
{{- end }}
{{- end }}
{{- end }}

# Certificates for exposeDomains 

{{- range $index, $domain := .Values.exposeDomains }}
{{- $domain := merge $domain $.Values.exposeDomainsDefaults }}
{{- if $domain.ssl }}
{{- if $domain.ssl.enabled }}
{{- if has $domain.ssl.issuer (list "letsencrypt" "letsencrypt-staging") }}
apiVersion: {{ include "cert-manager.api-version" $ | trim }}
kind: Certificate
metadata:
  name: {{ $.Release.Name }}-crt-{{ $index }}
  annotations:
    cert-manager.io/issue-temporary-certificate: "true"
    acme.cert-manager.io/http01-override-ingress-name: "{{ $.Release.Name }}-nginx-{{ $domain.ingress }}"
  labels:
    {{- include "frontend.release_labels" $ | nindent 4 }}
spec:
  secretName: {{ $.Release.Name }}-tls-{{ $index }}
  dnsNames:
  - {{ $domain.hostname }}
  issuerRef:
    name: {{ $domain.ssl.issuer }}
    kind: ClusterIssuer
{{- if eq ( include "cert-manager.api-version" $ | trim ) "certmanager.k8s.io/v1alpha1" }}
  acme:
    config:
      - http01:
          ingress: {{ $.Release.Name }}-nginx-{{ $domain.ingress }}
        domains:
          - {{ $domain.hostname }}
{{- end }}
---

{{- else if eq $domain.ssl.issuer "selfsigned" }}
apiVersion: {{ include "cert-manager.api-version" $ | trim }}
kind: Certificate
metadata:
  name: {{ $.Release.Name }}-crt-{{ $index }}
  labels:
    {{- include "frontend.release_labels" $ | nindent 4 }}
spec:
  secretName: {{ $.Release.Name }}-tls-{{ $index }}
  duration: 2160h
  renewBefore: 150h 
  commonName: {{ $domain.hostname }}
  dnsNames:
  - {{ $domain.hostname }}
  issuerRef:
    name: {{ $domain.ssl.issuer }}
    kind: ClusterIssuer
---

{{- else if eq $domain.ssl.issuer "custom" }}
{{- if not $domain.ssl.existingTLSSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $.Release.Name }}-tls-{{ $index }}-custom
  labels:
    {{- include "frontend.release_labels" $ | nindent 4 }}
type: kubernetes.io/tls
data:
  {{- if $domain.ssl.ca }}
  ca.crt: {{ $domain.ssl.ca | default "" | b64enc }}
  {{- end }}
  tls.crt: {{ $domain.ssl.crt | default "" | b64enc }}
  tls.key: {{ $domain.ssl.key | default "" | b64enc }}
---
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
