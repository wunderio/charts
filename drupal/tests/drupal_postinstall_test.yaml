suite: drupal post-install hook
templates:
  - post-release.yaml
capabilities:
  apiVersions:
    - pxc.percona.com/v1
tests:
  - it: is a helm hook
    template: post-release.yaml
    asserts:
      - isKind:
          of: Job

  - it: uses the right docker image
    template: post-release.yaml
    set:
      php.image: 'drupal-12345'
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: 'drupal-12345'

  - it: runs the right post-install command
    template: post-release.yaml
    set:
      php.postinstall.command: foo
      php.postupgrade.command: bar
    asserts:
      - matchRegex:
          path: spec.template.spec.containers[0].args[0]
          pattern: 'set -e'
      - matchRegex:
          path: spec.template.spec.containers[0].args[0]
          pattern: 'foo'
      - matchRegex:
          path: spec.template.spec.containers[0].args[0]
          pattern: 'bar'

  - it: exports reference data by default after each deployment
    template: post-release.yaml
    set:
      # Simulate a deployment on the reference environment
      environmentName: reference-environment
      referenceData.referenceEnvironment: reference-environment
    asserts:
      - matchRegex:
          path: spec.template.spec.containers[0].args[0]
          pattern: 'Dump reference database'

  - it: doesn't exports reference data after deployments if disabled
    template: post-release.yaml
    set:
      # Simulate a deployment on the reference environment
      environmentName: reference-environment
      referenceData.referenceEnvironment: reference-environment
      referenceData.updateAfterDeployment: false
    asserts:
      - notMatchRegex:
          path: spec.template.spec.containers[0].args[0]
          pattern: 'Dump reference database'

  - it: sets environment variables correctly
    template: post-release.yaml
    set:
      php.env:
        foo: bar
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: foo
            value: bar

  - it: has public files mounted (without provisioner)
    template: post-release.yaml
    asserts:
      - contains:
          path: spec.template.spec.volumes
          content:
            name: "drupal-public-files"
            persistentVolumeClaim:
              claimName: RELEASE-NAME-public-files
              
  - it: has public files mounted (silta-shared storageclass, with provisioner)
    template: post-release.yaml
    capabilities:
      apiVersions:
        - silta.wdr.io/v1
    set:
      mounts.public-files.storageClassName: silta-shared
    asserts:
      - contains:
          path: spec.template.spec.volumes
          content:
            name: "drupal-public-files"
            persistentVolumeClaim:
              claimName: RELEASE-NAME-public-files2
              
  - it: has public files mounted (non-silta-shared storageclass, with provisioner)
    template: post-release.yaml
    capabilities:
      apiVersions:
        - silta.wdr.io/v1
    set:
      mounts.public-files.storageClassName: foo
    asserts:
      - contains:
          path: spec.template.spec.volumes
          content:
            name: "drupal-public-files"
            persistentVolumeClaim:
              claimName: RELEASE-NAME-public-files

  - it: can override default php resource requests and limits
    template: post-release.yaml
    set:
      php.postinstall.resources:
        requests:
          cpu: 124m
          memory: 2G
        limits:
          cpu: 235m
          memory: 4G
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 124m
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 2G
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: 235m
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 4G
