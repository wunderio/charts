---
{{- $ingress := .Values.ingress }}
apiVersion: {{ include "silta-cluster.ingress-api-version" . | trim }}
kind: Ingress
metadata:
  name: {{ .Release.Name }}
  annotations:
    {{- if or (eq $ingress.class "gce") (eq ( include "silta-cluster.ingress-api-version" . | trim ) "networking.k8s.io/v1beta1") }}
    kubernetes.io/ingress.class: {{ $ingress.class | quote }}
    {{- end }}
    {{- if .Values.ssl.enabled }}
    {{- if eq $ingress.class "traefik" }}
    traefik.ingress.kubernetes.io/frontend-entry-points: "http,https"
    {{- end }}

    {{- $redirect_https := false }}
    {{- if (hasKey $ingress "redirect-https") }}
    {{- $redirect_https = (index $ingress "redirect-https") }}
    {{- end }}
    {{- if not $ingress.tls }}
    {{- $redirect_https = false }}
    {{- end }}
    {{- if $redirect_https }}
    ingress.kubernetes.io/ssl-redirect: {{ $redirect_https | quote }}
    {{- if eq $ingress.class "traefik" }}
    nginx.ingress.kubernetes.io/ssl-redirect: {{ $redirect_https | quote }}
    nginx.org/redirect-to-https: {{ $redirect_https | quote }}
    {{- end }}
    {{- if eq $ingress.class "azure/application-gateway" }}
    appgw.ingress.kubernetes.io/ssl-redirect: {{ $redirect_https | quote }}
    {{- end }}
    {{- if eq $ingress.class "nginx" }}
    nginx.ingress.kubernetes.io/ssl-redirect: {{ $redirect_https | quote }}
    nginx.org/redirect-to-https: {{ $redirect_https | quote }}
    {{- end }}
    {{- end }}
    
    {{- if eq ( include "silta-cluster.cert-manager-api-version" . | trim ) "cert-manager.io/v1" }}
    acme.cert-manager.io/http01-edit-in-place: "true"
    {{- else }}
    certmanager.k8s.io/acme-http01-edit-in-place: "true"
    {{- end }}
    {{- else }}
    {{- if eq $ingress.class "traefik" }}
    traefik.ingress.kubernetes.io/frontend-entry-points: "http"
    {{- end }}
    {{- end }}
    {{- if eq $ingress.class "gce" }}
    cert-manager.io/cluster-issuer: letsencrypt
    {{- end }}
    {{- if $ingress.staticIpAddressName }}
    kubernetes.io/ingress.global-static-ip-name: {{ $ingress.staticIpAddressName | quote }}
    {{- end }}
    {{- if eq $ingress.class "azure/application-gateway" }}
    cert-manager.io/cluster-issuer: letsencrypt
    appgw.ingress.kubernetes.io/health-probe-status-codes: "200-399, 401-404"
    {{- end }}
    {{- if $ingress.extraAnnotations }}
    {{- $ingress.extraAnnotations | toYaml | nindent 4 }}
    {{- end }}
spec:
  {{- if and (ne $ingress.class "gce" ) (eq ( include "silta-cluster.ingress-api-version" . | trim ) "networking.k8s.io/v1") }}
  ingressClassName: {{ regexReplaceAll "[^[:alnum:]]" $ingress.class "-" | quote }}
  {{- end }}
  {{- if .Values.ssl.enabled }}
  tls:
  - secretName: {{ .Release.Name }}-tls
    hosts: 
      - {{ .Values.clusterDomain }}
      {{- if .Values.deploymentRemover.enabled }}
      - webhooks.{{ .Values.clusterDomain }}
      {{- end }}
      {{- if .Values.sshKeyServer.enabled }}
      - keys.{{ .Values.clusterDomain }}
      {{- end }}
      {{- if index (index .Values "silta-downscaler") "enabled" }}
      - downscaler.{{ .Values.clusterDomain }}
      {{- end }}
      {{- if index (index .Values "docker-registry") "enabled" }}
      - registry.{{ .Values.clusterDomain }}
      {{- end }}
  {{- end }}
  rules:
  - host: {{ .Values.clusterDomain }}
    http:
      paths:
      - path: /
        {{- if eq ( include "silta-cluster.ingress-api-version" . | trim ) "networking.k8s.io/v1" }}
        pathType: Prefix
        {{- end }}
        backend:
          {{- if eq ( include "silta-cluster.ingress-api-version" . | trim ) "networking.k8s.io/v1" }}
          service:
            name: {{ .Release.Name }}-splash
            port: 
              number: 80
          {{- else }}
          serviceName: {{ .Release.Name }}-splash
          servicePort: 80
          {{- end }}
  {{- if .Values.deploymentRemover.enabled }}
  - host: webhooks.{{ .Values.clusterDomain }}
    http:
      paths:
      - path: /
        {{- if eq ( include "silta-cluster.ingress-api-version" . | trim ) "networking.k8s.io/v1" }}
        pathType: Prefix
        {{- end }}
        backend:
          {{- if eq ( include "silta-cluster.ingress-api-version" . | trim ) "networking.k8s.io/v1" }}
          service:
            name: {{ .Release.Name }}-deployment-remover
            port: 
              number: 80
          {{- else }}
          serviceName: {{ .Release.Name }}-deployment-remover
          servicePort: 80
          {{- end }}
  {{- end }}
  {{- if .Values.sshKeyServer.enabled }}
  - host: keys.{{ .Values.clusterDomain }}
    http:
      paths:
      - path: /
        {{- if eq ( include "silta-cluster.ingress-api-version" . | trim ) "networking.k8s.io/v1" }}
        pathType: Prefix
        {{- end }}
        backend:
          {{- if eq ( include "silta-cluster.ingress-api-version" . | trim ) "networking.k8s.io/v1" }}
          service:
            name: {{ .Release.Name }}-ssh-key-server
            port: 
              number: 80
          {{- else }}
          serviceName: {{ .Release.Name }}-ssh-key-server
          servicePort: 80
          {{- end }}
  {{- end }}
  {{- if index (index .Values "silta-downscaler") "enabled" }}
  - host: downscaler.{{ .Values.clusterDomain }}
    http:
      paths:
      - path: /
        {{- if eq ( include "silta-cluster.ingress-api-version" . | trim ) "networking.k8s.io/v1" }}
        pathType: Prefix
        {{- end }}
        backend:
          {{- if eq ( include "silta-cluster.ingress-api-version" . | trim ) "networking.k8s.io/v1" }}
          service:
            name: {{ .Release.Name }}-placeholder-upscaler
            port: 
              number: 80
          {{- else }}
          serviceName: {{ .Release.Name }}-placeholder-upscaler
          servicePort: 80
          {{- end }}
  {{- end }}
  {{- if index (index .Values "docker-registry") "enabled" }}
  - host: registry.{{ .Values.clusterDomain }}
    http:
      paths:
      - path: /
        {{- if eq ( include "silta-cluster.ingress-api-version" . | trim ) "networking.k8s.io/v1" }}
        pathType: Prefix
        {{- end }}
        backend:
          {{- if eq ( include "silta-cluster.ingress-api-version" . | trim ) "networking.k8s.io/v1" }}
          service:
            name: {{ .Release.Name }}-docker-registry
            port: 
              number: 80
          {{- else }}
          serviceName: {{ .Release.Name }}-docker-registry
          servicePort: 80
          {{- end }}
  {{- end }}
