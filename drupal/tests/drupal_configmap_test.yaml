suite: drupal ConfigMaps
templates:
  - drupal-configmap.yaml
  - varnish-configmap-vcl.yaml
capabilities:
  apiVersions:
    - pxc.percona.com/v1
tests:
  - it: is a ConfigMap
    template: drupal-configmap.yaml
    asserts:
      - isKind:
          of: ConfigMap
      - equal:
          path: metadata.labels.app
          value: drupal

  - it: injects the php.ini values
    template: drupal-configmap.yaml
    set:
      php.php_ini:
        upload_max_filesize: '123M'
        post_max_size: '321M'
    asserts:
    - matchRegex:
        path: data.php_ini
        pattern: 'post_max_size = 321M'
    - matchRegex:
        path: data.php_ini
        pattern: 'upload_max_filesize = 123M'

  - it: injects custom php.ini values with extraConfig
    template: drupal-configmap.yaml
    set:
      php.php_ini.extraConfig: |
        [PHP]
        display_errors = On
    asserts:
    - matchRegex:
        path: data.php_ini
        pattern: 'display_errors = On'

  - it: injects custom nginx configuration into server context
    template: drupal-configmap.yaml
    set:
      nginx:
        serverExtraConfig: |
          location = /randomlocation {
            return 418;
          }
    asserts:
    - matchRegex:
        path: data.drupal_conf
        pattern: "location = /randomlocation"

  - it: injects the nginx configuration
    template: drupal-configmap.yaml
    set:
      nginx:
        loglevel: 'debug'
        realipfrom: '1.2.3.4'
        basicauth:
          enabled: true
    asserts:
    - matchRegex:
        path: data.nginx_conf
        pattern: '/proc/self/fd/2 debug;'
    - matchRegex:
        path: data.nginx_conf
        pattern: 'set_real_ip_from *1.2.3.4'
    - matchRegex:
        path: data.drupal_conf
        pattern: 'auth_basic "Restricted";'

  - it: tests realipfrom nginx configuration (legacy string value)
    template: drupal-configmap.yaml
    set:
      nginx:
        realipfrom: '1.2.3.4'
    asserts:
    - matchRegex:
        path: data.nginx_conf
        pattern: 'set_real_ip_from *1.2.3.4'

  - it: tests realipfrom nginx configuration (multivalue object)
    template: drupal-configmap.yaml
    set:
      nginx:
        realipfrom:
          foo: '1.1.1.1'
          bar: '2.2.2.2'
    asserts:
    - matchRegex:
        path: data.nginx_conf
        pattern: 'set_real_ip_from *1.1.1.1'
    - matchRegex:
        path: data.nginx_conf
        pattern: 'set_real_ip_from *2.2.2.2'

  - it: tests realipfrom varnish configuration (legacy string value)
    template: varnish-configmap-vcl.yaml
    set:
      nginx:
        realipfrom: '1.1.1.1'
      varnish:
        enabled: true
    asserts:
    - matchRegex:
        path: data.default_vcl
        pattern: "1.1.1.1"

  - it: tests realipfrom varnish configuration (multivalue object)
    template: varnish-configmap-vcl.yaml
    set:
      nginx:
        realipfrom:
          foo: '1.1.1.1'
          bar: '2.2.2.2'
      varnish:
        enabled: true
    asserts:
    - matchRegex:
        path: data.default_vcl
        pattern: "1.1.1.1"
    - matchRegex:
        path: data.default_vcl
        pattern: "2.2.2.2"

  - it: tests nginx security headers
    template: drupal-configmap.yaml
    set:
      nginx:
        security_headers:
          foo: bar
        content_security_policy: "baz"
    asserts:
    - matchRegex:
        path: data.nginx_conf
        pattern: 'add_header                  X-XSS-Protection "1; mode=block";'
    - matchRegex:
        path: data.nginx_conf
        pattern: 'add_header                  foo bar;'
    - matchRegex:
        path: data.nginx_conf
        pattern: 'add_header                  Content-Security-Policy "baz" always;'

  - it: tests ability to set empty nginx security headers
    template: drupal-configmap.yaml
    set:
      nginx:
        security_headers: null
        content_security_policy: ""
    asserts:
    - notMatchRegex:
        path: data.nginx_conf
        pattern: 'add_header                  X-XSS-Protection "1; mode=block";'
    - notMatchRegex:
        path: data.nginx_conf
        pattern: 'add_header                  foo bar;'
    - notMatchRegex:
        path: data.nginx_conf
        pattern: 'add_header                  Content-Security-Policy "baz" always;'

  - it: tests ability to unset a single default nginx security header
    template: drupal-configmap.yaml
    set:
      nginx:
        security_headers:
          X-XSS-Protection: ""
          foo: bar
    asserts:
    - notMatchRegex:
        path: data.nginx_conf
        pattern: 'add_header                  X-XSS-Protection'
    - matchRegex:
        path: data.nginx_conf
        pattern: 'add_header                  Referrer-Policy "no-referrer, strict-origin-when-cross-origin" always;'
    - matchRegex:
        path: data.nginx_conf
        pattern: 'add_header                  foo bar;'

  - it: includes NDK module for nginx < 1.26
    template: drupal-configmap.yaml
    set:
      signalsciences:
        enabled: true
      nginx:
        version: "1.25"
    asserts:
      - matchRegex:
          path: data.nginx_signalsciences_conf
          pattern: 'load_module /etc/nginx/modules/ngx_http_sigsci_module.so;'
      - matchRegex:
          path: data.nginx_signalsciences_conf
          pattern: 'load_module /etc/nginx/modules/ndk_http_module.so;'

  - it: does not include NDK module for nginx >= 1.26
    template: drupal-configmap.yaml
    set:
      signalsciences:
        enabled: true
      nginx:
        version: "1.26"
    asserts:
      - matchRegex:
          path: data.nginx_signalsciences_conf
          pattern: 'load_module /etc/nginx/modules/ngx_http_sigsci_module.so;'
      - notMatchRegex:
          path: data.nginx_signalsciences_conf
          pattern: 'load_module /etc/nginx/modules/ndk_http_module.so;'

  - it: does not include NDK module for nginx 2.x
    template: drupal-configmap.yaml
    set:
      signalsciences:
        enabled: true
      nginx:
        version: "2.0"
    asserts:
      - matchRegex:
          path: data.nginx_signalsciences_conf
          pattern: 'load_module /etc/nginx/modules/ngx_http_sigsci_module.so;'
      - notMatchRegex:
          path: data.nginx_signalsciences_conf
          pattern: 'load_module /etc/nginx/modules/ndk_http_module.so;'

  - it: includes NDK module when nginx version is empty
    template: drupal-configmap.yaml
    set:
      signalsciences:
        enabled: true
      nginx:
        version: ""
    asserts:
      - matchRegex:
          path: data.nginx_signalsciences_conf
          pattern: 'load_module /etc/nginx/modules/ngx_http_sigsci_module.so;'
      - matchRegex:
          path: data.nginx_signalsciences_conf
          pattern: 'load_module /etc/nginx/modules/ndk_http_module.so;'
