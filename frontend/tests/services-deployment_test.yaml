suite: Site deployment
templates:
  - services-deployment.yaml
  - configmap.yaml
  - image-secrets.yaml
tests:
  - it: is a deployment with default values
    template: services-deployment.yaml
    set:
      services:
        foo:
          image: 'bar'
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.replicas
          value: 1
      - equal:
          path: metadata.labels.app
          value: frontend

  - it: uses the right docker images
    template: services-deployment.yaml
    set:
      services:
        foo:
          image: 'bar'
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: 'bar'

  - it: sets the replica count correctly
    template: services-deployment.yaml
    set:
      services:
        foo:
          replicas: 3
    asserts:
      - equal:
          path: spec.replicas
          value: 3

  - it: sets environment variables correctly
    template: services-deployment.yaml
    set:
      services:
        foo:
          env:
            bar: baz
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: bar
            value: baz
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: PORT
            value: "3000"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: ENVIRONMENT_DOMAIN
            value: release-name.namespace.silta.wdr.io

  - it: uses the default port
    template: services-deployment.yaml
    set:
      services:
        foo:
          exposedRoute: '/bar'
          image: 'bar'
      serviceDefaults:
        port: 12345
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 12345
      - template: configmap.yaml
        matchRegex:
          path: data.frontend_conf
          pattern: 'location /bar'

  - it: uses the port and exposed route of the service
    template: services-deployment.yaml
    set:
      services:
        foo:
          image: 'bar'
          port: 12345
          exposedRoute: '/bar'
    asserts:
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 12345
      - template: configmap.yaml
        matchRegex:
          path: data.frontend_conf
          pattern: 'location /bar'

  - it: uses default requests and limits
    template: services-deployment.yaml
    set:
      services:
        foo:
          image: 'bar'
      serviceDefaults.resources:
        requests:
          cpu: 123m
          memory: 1G
        limits:
          cpu: 234m
          memory: 2G
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 123m
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 1G
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: 234m
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 2G

  - it: takes resource requests and limits
    template: services-deployment.yaml
    set:
      services.foo.resources:
        requests:
          cpu: 123m
          memory: 1G
        limits:
          cpu: 234m
          memory: 2G
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 123m
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 1G
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: 234m
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 2G

  - it: merges resource requests and limits
    template: services-deployment.yaml
    set:
      serviceDefaults.resources:
        requests:
          cpu: 123m
          memory: 1G
        limits:
          cpu: 234m
          memory: 2G
      services.foo.resources:
        requests:
          cpu: 234m
        limits:
          memory: 4G
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 234m
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 1G
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: 234m
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 4G

  - it: can set nodeSelector via serviceDefaults
    template: services-deployment.yaml
    set:
      services.foo:
        image: 'bar'
      serviceDefaults.nodeSelector:
        foo: bar
    asserts:
      - equal:
          path: spec.template.spec.nodeSelector
          value:
            foo: bar
      - contains:
          path: spec.template.spec.tolerations
          content:
            key: foo
            operator: Equal
            value: bar

  - it: can override nodeSelector in service
    template: services-deployment.yaml
    set:
      services.foo:
        image: 'bar'
        nodeSelector:
          bar: baz
      serviceDefaults.nodeSelector:
        foo: bar
    asserts:
      - equal:
          path: spec.template.spec.nodeSelector
          value:
            bar: baz
      - contains:
          path: spec.template.spec.tolerations
          content:
            key: bar
            operator: Equal
            value: baz

  - it: can autoscale with default values
    template: services-deployment.yaml
    set:
      services.foo:
        image: 'bar'
        autoscaling:
          enabled: true
    asserts:
      - documentIndex: 1
        isKind:
          of: HorizontalPodAutoscaler
      - documentIndex: 1
        equal:
          path: spec.minReplicas
          value: 1
      - documentIndex: 1
        equal:
          path: spec.maxReplicas
          value: 3

  - it: can override autoscale values
    template: services-deployment.yaml
    set:
      services.foo:
        image: 'bar'
        autoscaling:
          enabled: true
          minReplicas: 5
          maxReplicas: 7
    asserts:
      - documentIndex: 1
        isKind:
          of: HorizontalPodAutoscaler
      - documentIndex: 1
        equal:
          path: spec.minReplicas
          value: 5
      - documentIndex: 1
        equal:
          path: spec.maxReplicas
          value: 7

  - it: uses RollingUpdate as default service deployment strategy
    template: services-deployment.yaml
    set:
      services:
        foo:
          exposedRoute: '/bar'
          image: 'bar'
    asserts:
      - equal:
          path: spec.strategy.type
          value: RollingUpdate

  - it: allows service deployment strategy override
    template: services-deployment.yaml
    set:
      services:
        foo:
          image: 'bar'
          exposedRoute: '/bar'
          strategy:
            foo: BAR
    asserts:
      - equal:
          path: spec.strategy.foo
          value: BAR

  - it: can set terminationGracePeriodSeconds
    template: services-deployment.yaml
    set:
      services.foo:
        image: 'bar'
        terminationGracePeriodSeconds: 123
    asserts:
      - equal:
          path: spec.template.spec.terminationGracePeriodSeconds
          value: 123

  - it: Uses serviceDefaults lifecycle hook
    template: services-deployment.yaml
    set:
      services:
        service1:
          image: 'foo'
        service2:
          image: 'bar'
      serviceDefaults:
        lifecycle:
          postStart: 
            exec:
              command: ['/bin/echo', 'foo']
          preStop: 
            exec:
              command: ['/bin/echo', 'bar']
    asserts:
      - documentIndex: 0
        equal:
          path: spec.template.spec.containers[0].lifecycle
          value:
            postStart:
              exec:
                command: ['/bin/echo', 'foo']
            preStop:
              exec:
                command: ['/bin/echo', 'bar']
      - documentIndex: 1
        equal:
          path: spec.template.spec.containers[0].lifecycle
          value:
            postStart:
              exec:
                command: ['/bin/echo', 'foo']
            preStop:
              exec:
                command: ['/bin/echo', 'bar']

  - it: Allows override of lifecycle hook
    template: services-deployment.yaml
    set:
      services:
        service1:
          image: 'foo'
        service2:
          image: 'bar'
          lifecycle:
            postStart: 
              exec:
                command: ['/bin/echo', 'baz']
            preStop: 
              exec:
                command: ['/bin/echo', 'qux']
      serviceDefaults:
        lifecycle:
          postStart: 
            exec:
              command: ['/bin/echo', 'foo']
          preStop: 
            exec:
              command: ['/bin/echo', 'bar']
    asserts:
      - documentIndex: 0
        equal:
          path: spec.template.spec.containers[0].lifecycle
          value:
            postStart:
              exec:
                command: ['/bin/echo', 'foo']
            preStop:
              exec:
                command: ['/bin/echo', 'bar']
      - documentIndex: 1
        equal:
          path: spec.template.spec.containers[0].lifecycle
          value:
            postStart:
              exec:
                command: ['/bin/echo', 'baz']
            preStop:
              exec:
                command: ['/bin/echo', 'qux']
