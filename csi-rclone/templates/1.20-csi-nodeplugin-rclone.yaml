{{- if and ( eq .Capabilities.KubeVersion.Major "1") ( ge $.Capabilities.KubeVersion.Minor "20" ) }}
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-nodeplugin-rclone
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: csi-nodeplugin-rclone
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 35%
  template:
    metadata:
      labels:
        app: csi-nodeplugin-rclone
    spec:
      enableServiceLinks: false
      serviceAccountName: csi-nodeplugin-rclone
      {{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
      {{- end }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: node-driver-registrar
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.4.0
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "rm -rf /registration/csi-rclone /registration/csi-rclone-reg.sock"]
          args:
            - --v=1
            - --csi-address=/plugin/csi.sock
            - --kubelet-registration-path={{ .Values.nodePlugin.kubeletBasePath }}/plugins/csi-rclone/csi.sock
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: plugin-dir
              mountPath: /plugin
            - name: registration-dir
              mountPath: /registration
          resources:
            {{- .Values.nodePlugin.registrar.resources | toYaml | nindent 12 }}
        - name: rclone
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          image: wunderio/csi-rclone:{{- .Values.version }}
          args:
            - "/bin/csi-rclone-plugin"
            - "--nodeid=$(NODE_ID)"
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--v=1"
          env:
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix://plugin/csi.sock
          imagePullPolicy: "Always"
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "mount -t fuse.rclone | while read -r mount; do umount $(echo $mount | awk '{print $3}') || true ; done"]
          volumeMounts:
            - name: plugin-dir
              mountPath: /plugin
            - name: pods-mount-dir
              mountPath: {{ .Values.nodePlugin.kubeletBasePath }}/pods
              mountPropagation: "Bidirectional"
          resources:
            {{- .Values.nodePlugin.rclone.resources | toYaml | nindent 12 }}
      volumes:
        - name: plugin-dir
          hostPath:
            path: {{ .Values.nodePlugin.kubeletBasePath }}/plugins/csi-rclone
            type: DirectoryOrCreate
        - name: pods-mount-dir
          hostPath:
            path: {{ .Values.nodePlugin.kubeletBasePath }}/pods
            type: Directory
        - hostPath:
            path: {{ .Values.nodePlugin.kubeletBasePath }}/plugins_registry
            type: DirectoryOrCreate
          name: registration-dir
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
{{- end }}
