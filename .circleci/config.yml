version: 2.1

orbs:
  silta: silta/silta@0.1

jobs:
  validate:
    executor: silta/silta

    steps:
      - checkout
      - run:
          name: Lint Helm charts and run helm unit tests
          command: |
            for CHARTFILE in `find . -name Chart.yaml`
            do
              CHART=`dirname $CHARTFILE`
              # helm lint $CHART
              helm unittest $CHART
            done

  build:
    executor: silta/silta

    steps:
      - checkout

      - silta/gcloud-login

      - run:
          name: Copy index locally
          command: |
            mkdir -p /tmp/charts
            gsutil -m rsync -d -r gs://charts.wdr.io /tmp/charts

      - run:
          name: Build charts
          command: |
            set -o xtrace

            helm repo add wunderio https://storage.googleapis.com/charts.wdr.io
            helm repo add codecentric https://codecentric.github.io/helm-charts
            helm repo add jetstack https://charts.jetstack.io
            helm repo add elastic https://helm.elastic.co
            helm repo add stable https://kubernetes-charts.storage.googleapis.com

            mkdir -p /tmp/charts
            for CHARTFILE in `find . -name Chart.yaml`
            do
              CHART=`dirname $CHARTFILE`
              helm dependency build $CHART
              helm package $CHART --destination /tmp/charts
            done

            helm repo index /tmp/charts --url https://storage.googleapis.com/charts.wdr.io

      - save_cache:
          key: v1-{{ .Revision }}
          paths:
            - /tmp/charts

  deploy:
    executor: silta/silta

    steps:
      - restore_cache:
          key: v1-{{ .Revision }}

      - silta/gcloud-login

      - run:
          name: Deploy to Google Cloud Storage
          command: |
            gsutil -m rsync -d -r /tmp/charts gs://charts.wdr.io

workflows:
  version: 2
  commit:
    jobs:
      - validate
      - build:
          context: global_nonprod
          requires:
            - validate
      - deploy:
          context: global_nonprod
          requires:
            - build
          filters:
            branches:
              only: master
