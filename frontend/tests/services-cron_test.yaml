suite: Cron Jobs
templates:
  - services-cron.yaml
tests:
  - it: is a CronJob with default values
    template: services-cron.yaml
    set:
      services.foo:
        image: 'bar'
        cron:
          foo:
            command: echo "Hello world"
            schedule: '1 2 3 * *'

    asserts:
      - isKind:
          of: CronJob
      - equal:
          path: metadata.labels.app
          value: frontend
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].image
          value: 'bar'
      - equal:
          path: spec.jobTemplate.spec.parallelism
          value: 1

  - it: can override parallelism
    template: services-cron.yaml
    set:
      services.foo:
        image: 'bar'
        cron:
          foo:
            command: echo "Hello world"
            schedule: '1 2 3 * *'
            parallelism: 3

    asserts:
      - equal:
          path: spec.jobTemplate.spec.parallelism
          value: 3

  - it: job inherits service resource requests and default values when no job resources are defined
    template: services-cron.yaml
    set:
      services.foo:
        image: 'bar'
        resources:
          requests:
            cpu: 1m
            memory: 2Mi
        cron:
          foo:
            command: echo "Hello world"
            schedule: '1 2 3 * *' 
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].resources.requests.cpu
          value: 1m
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].resources.requests.memory
          value: 2Mi

  - it: job can has it's own resource requests
    template: services-cron.yaml
    set:
      services.foo:
        image: 'bar'
        resources: 
          requests:
            cpu: 1m
            memory: 2Mi
        cron:
          foo:
            command: echo "Hello world"
            schedule: '1 2 3 * *'
            resources: 
              requests:
                cpu: 3m
                memory: 4Mi
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].resources.requests.cpu
          value: 3m
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].resources.requests.memory
          value: 4Mi

  - it: job's resource requests are merged with service resource requests
    template: services-cron.yaml
    set:
      services.foo:
        image: 'bar'
        resources: 
          requests:
            cpu: 1m
            memory: 2Mi
        cron:
          foo:
            command: echo "Hello world"
            schedule: '1 2 3 * *'
            resources:
              requests:
                cpu: 3m
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].resources.requests.cpu
          value: 3m
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].resources.requests.memory
          value: 2Mi

  - it: job's resource requests are merged with cronJobDefaults and service resource request defaults
    template: services-cron.yaml
    set:
      serviceDefaults:
        resources: 
          requests:
            cpu: 1m
            memory: 1Mi
      cronJobDefaults:
        resources:
          requests:
            cpu: 2m
            memory: 2Mi
      services.foo:
        image: 'bar'
        resources:
          requests:
            cpu: 3m
        cron:
          foo:
            command: echo "Hello world"
            schedule: '1 2 3 * *'
            resources:
              requests:
                cpu: 4m
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].resources.requests.cpu
          value: 4m
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].resources.requests.memory
          value: 2Mi

  - it: cronJobDefaults resource requests should take precedence over service resource request and service resource request defaults
    template: services-cron.yaml
    set:
      serviceDefaults:
        resources:
          requests:
            cpu: 1m
            memory: 1Mi
      cronJobDefaults:
        resources:
          requests:
            cpu: 2m
            memory: 2Mi
      services.foo:
        image: 'bar'
        resources:
          requests:
            cpu: 3m
        cron:
          foo:
            command: echo "Hello world"
            schedule: '1 2 3 * *'
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].resources.requests.cpu
          value: 2m
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].resources.requests.memory
          value: 2Mi

  - it: can set timezone
    template: services-cron.yaml
    set:
      timezone: 'Foo/Bar'
      services.foo:
        image: 'bar'
        cron:
          foo:
            command: echo "Hello world"
            schedule: '1 2 3 * *'
    capabilities:
      majorVersion: 1
      minorVersion: 25
    asserts:
      - equal:
          path: spec.timeZone
          value: 'Foo/Bar'
      - contains:
          path: spec.jobTemplate.spec.template.spec.containers[0].env
          content:
            name: TZ
            value: Foo/Bar

  - it: can set podSecurityContext at cron job level
    template: services-cron.yaml
    set:
      services.foo:
        image: 'bar'
        cron:
          foo:
            command: echo "Hello world"
            schedule: '1 2 3 * *'
            podSecurityContext:
              fsGroup: 1000
              runAsUser: 1001
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.securityContext.fsGroup
          value: 1000
      - equal:
          path: spec.jobTemplate.spec.template.spec.securityContext.runAsUser
          value: 1001

  - it: can set containerSecurityContext at cron job level
    template: services-cron.yaml
    set:
      services.foo:
        image: 'bar'
        cron:
          foo:
            command: echo "Hello world"
            schedule: '1 2 3 * *'
            containerSecurityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation
          value: false
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem
          value: true

  - it: inherits podSecurityContext from service level
    template: services-cron.yaml
    set:
      services.foo:
        image: 'bar'
        podSecurityContext:
          fsGroup: 2000
          runAsUser: 2001
        cron:
          foo:
            command: echo "Hello world"
            schedule: '1 2 3 * *'
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.securityContext.fsGroup
          value: 2000
      - equal:
          path: spec.jobTemplate.spec.template.spec.securityContext.runAsUser
          value: 2001

  - it: inherits containerSecurityContext from service level
    template: services-cron.yaml
    set:
      services.foo:
        image: 'bar'
        containerSecurityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        cron:
          foo:
            command: echo "Hello world"
            schedule: '1 2 3 * *'
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation
          value: false
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem
          value: true

  - it: cronjob level podSecurityContext takes precedence over service level podSecurityContext
    template: services-cron.yaml
    set:
      services.foo:
        image: 'bar'
        podSecurityContext:
          fsGroup: 2000
          runAsUser: 2001
        cron:
          foo:
            command: echo "Hello world"
            schedule: '1 2 3 * *'
            podSecurityContext:
              fsGroup: 3000
              runAsUser: 3001
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.securityContext.fsGroup
          value: 3000
      - equal:
          path: spec.jobTemplate.spec.template.spec.securityContext.runAsUser
          value: 3001

  - it: cronjob level containerSecurityContext takes precedence over service level containerSecurityContext
    template: services-cron.yaml
    set:
      services.foo:
        image: 'bar'
        containerSecurityContext:
          allowPrivilegeEscalation: true
          readOnlyRootFilesystem: true
        cron:
          foo:
            command: echo "Hello world"
            schedule: '1 2 3 * *'
            containerSecurityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
    asserts:
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].securityContext.allowPrivilegeEscalation
          value: false
      - equal:
          path: spec.jobTemplate.spec.template.spec.containers[0].securityContext.readOnlyRootFilesystem
          value: false
