apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-drupal
  labels:
    {{- include "drupal.release_labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "drupal.release_selector_labels" . | nindent 6 }}
      deployment: drupal
  template:
    metadata:
      labels:
        {{- include "drupal.release_labels" . | nindent 8 }}
        deployment: drupal
        silta-ingress: allow
      annotations:
        # We use a checksum to redeploy the pods when the configMap changes.
        configMap-checksum: {{ include (print $.Template.BasePath "/drupal-configmap.yaml") . | sha256sum }}
    spec:
      enableServiceLinks: false
      containers:
      # php-fpm container.
      - name: php
        {{- include "drupal.php-container" . | nindent 8}}
        volumeMounts:
          {{- include "drupal.volumeMounts" . | nindent 10 }}
          - name: config
            mountPath: /php-fpm-probe.sh
            subPath: php-fpm-probe.sh
        livenessProbe:
          tcpSocket:
            port: 9000
        readinessProbe:
          exec:
            command: ['/bin/bash', '-c', '/php-fpm-probe.sh']
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sleep","10"]
          postStart:
            exec:
              command:
              - bash
              - -c
              - cp /tmp/zz-custom.conf /usr/local/etc/php-fpm.d/zz-custom.conf
        resources:
          {{- .Values.php.resources | toYaml | nindent 10 }}

      # Nginx container
      - name: nginx
        image: {{ .Values.nginx.image | quote }}
        env:
        ports:
        - containerPort: 8080
          name: drupal
        volumeMounts:
        {{- range $index, $mount := $.Values.mounts }}
        {{- if eq $mount.enabled true }}
        - name: drupal-{{ $index }}
          mountPath: {{ $mount.mountPath }}
          readOnly: true
        {{- end }}
        {{- end }}
        - name: config
          mountPath: /etc/nginx/nginx.conf
          readOnly: true
          subPath: nginx_conf
        - name: config
          mountPath: /etc/nginx/conf.d/drupal.conf
          readOnly: true
          subPath: drupal_conf
        - name: config
          mountPath: /etc/nginx/fastcgi.conf
          readOnly: true
          subPath: fastcgi_conf
        {{- if .Values.nginx.extraConfig }}
        - name: config
          # provide empty configuration file in /etc/nginx/conf.d for users to populate
          mountPath: /etc/nginx/conf.d/misc.conf
          readOnly: true
          subPath: extraConfig
        {{- end }}  
        {{- if .Values.nginx.basicauth.enabled }}
        - name: nginx-basicauth
          mountPath: /etc/nginx/.htaccess
          readOnly: true
          subPath: .htaccess
        {{- end }}
        livenessProbe:
          tcpSocket:
            port: 8080
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sleep","10"]
        resources:
          {{- .Values.nginx.resources | toYaml | nindent 10 }}

      volumes:
        {{- include "drupal.volumes" . | nindent 8}}
        {{- if .Values.nginx.basicauth.enabled }}
        - name: nginx-basicauth
          secret:
            secretName: {{ .Release.Name }}-secrets-drupal
            items:
              - key: .htaccess
                path: .htaccess
        {{- end }}
      {{- include "drupal.imagePullSecrets" . | nindent 6 }}
      nodeSelector:
        {{- .Values.php.nodeSelector | toYaml | nindent 8 }}
      tolerations:
        {{- include "drupal.tolerations" .Values.php.nodeSelector | nindent 8 }}
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          # Preferrably keep pods on the same node as the database.
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: release
                  operator: In
                  values:
                  - "{{ .Release.Name }}"
                - key: mariadb
                  operator: In
                  values:
                  - mariadb
              topologyKey: kubernetes.io/hostname
          # Preferrably keep pods in the same zone as the database.
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: release
                  operator: In
                  values:
                  - "{{ .Release.Name }}"
                - key: mariadb
                  operator: In
                  values:
                  - mariadb
              topologyKey: topology.kubernetes.io/zone
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 10
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: release
                  operator: In
                  values:
                  - "{{ .Release.Name }}"
                - key: deployment
                  operator: In
                  values:
                  - drupal
---
{{- if .Values.autoscaling.enabled }}
apiVersion: {{ include "drupal.autoscaling.api-version" . | trim }}
kind: HorizontalPodAutoscaler
metadata:
  name: {{ .Release.Name }}-drupal
  labels:
    {{- include "drupal.release_labels" . | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Release.Name }}-drupal
  minReplicas: {{ .Values.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.autoscaling.maxReplicas }}
  metrics:
    {{- toYaml .Values.autoscaling.metrics | nindent 4 }}
{{- end }}
