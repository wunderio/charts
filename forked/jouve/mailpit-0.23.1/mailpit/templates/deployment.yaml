apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  {{- with .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" . "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  {{- if and .Values.persistence.enabled (eq (index .Values.persistence.accessModes 0) "ReadWriteOnce") }}
  strategy:
    type: Recreate
  {{- else if .Values.updateStrategy }}
  strategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.podLabels .Values.commonLabels ) "context" . ) | fromYaml }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
      {{- if or .Values.podAnnotations (include "mailpit.hasSecret" .) }}
      annotations:
        {{- with .Values.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
        {{- end }}
        {{- if include "mailpit.hasSecret" . }}
        checksum/secret: {{ template "common.utils.checksumTemplate" (dict "path" "/secret.yaml" "context" .) }}
        {{- end }}
      {{- end }}
    spec:
      automountServiceAccountToken: false
      enableServiceLinks: {{ .Values.enableServiceLinks }}
      {{- include "common.images.renderPullSecrets" (dict "images" (list .Values.image) "context" $) | nindent 6 }}
      {{- if .Values.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: mailpit
          image: {{ include "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          args:
          - --db-file
          - /var/lib/mailpit/mailpit.db
          - --webroot
          - {{ .Values.mailpit.webroot }}
          {{- if .Values.mailpit.ui.authFile.enabled }}
          - --ui-auth-file
          - /etc/mailpit/ui.htpasswd
          {{- end }}
          {{- if .Values.mailpit.ui.tls.enabled }}
          - --ui-tls-cert
          - /etc/mailpit/ui.crt
          - --ui-tls-key
          - /etc/mailpit/ui.key
          {{- end }}
          {{- if .Values.mailpit.smtp.authFile.enabled }}
          - --smtp-auth-file
          - /etc/mailpit/smtp.htpasswd
          {{- if not .Values.mailpit.smtp.tls.enabled }}
          - --smtp-auth-allow-insecure
          {{- end }}
          {{- end }}
          {{- if .Values.mailpit.smtp.tls.enabled }}
          - --smtp-tls-cert
          - /etc/mailpit/smtp.crt
          - --smtp-tls-key
          - /etc/mailpit/smtp.key
          {{- end }}
          {{- if .Values.image.debug }}
          - --verbose
          {{- end }}
          {{- if .Values.mailpit.relay.enabled }}
          - --smtp-relay-config
          - /etc/mailpit/smtp_relay.yaml
          {{- if .Values.mailpit.relay.relayAll }}
          - --smtp-relay-all
          {{- end }}
          {{- end }}
          {{- with .Values.args }}
          {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 10 }}
          {{- end }}
          {{- with .Values.extraEnvVars }}
          env: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 10 }}
          {{- end }}
          {{- with .Values.extraEnvVarsSecret }}
          envFrom:
            - secretRef:
                name: {{ template "common.tplvalues.render" (dict "value" . "context" $) }}
          {{- end }}
          {{- with .Values.resources }}
          resources: {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 12 }}
          {{- else }}
          {{- if ne .Values.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" .Values.resourcesPreset) | nindent 12 }}
          {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8025
            - name: smtp
              containerPort: 1025
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.mailpit.webroot | trimSuffix "/" }}/livez
              port: 8025
              scheme: HTTP
            {{- with omit .Values.livenessProbe "enabled" }}
            {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.mailpit.webroot | trimSuffix "/" }}/readyz
              port: 8025
              scheme: HTTP
            {{- with omit .Values.readinessProbe "enabled" }}
            {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 12 }}
            {{- end }}
          {{- end }}
          volumeMounts:
          - name: data
            mountPath: /var/lib/mailpit
          {{- if or .Values.mailpit.ui.authFile.enabled .Values.mailpit.smtp.authFile.enabled .Values.mailpit.ui.tls.secretName .Values.mailpit.smtp.tls.secretName .Values.mailpit.relay.enabled }}
          - name: etc
            mountPath: /etc/mailpit
          {{- end }}
          {{- with .Values.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" . "context" $) | nindent 12 }}
          {{- end }}
        {{- with .Values.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
        {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" . "context" $) | nindent 8 }}
      {{- end }}
      volumes:
        {{- if or .Values.mailpit.ui.authFile.enabled .Values.mailpit.smtp.authFile.enabled .Values.mailpit.ui.tls.enabled .Values.mailpit.smtp.tls.enabled .Values.mailpit.relay.enabled }}
        - name: etc
          projected:
            sources:
            {{- if include "mailpit.hasSecret" . }}
            - secret:
                name: {{ template "common.names.fullname" . }}
            {{- end }}
            {{- if and .Values.mailpit.ui.authFile.enabled .Values.mailpit.ui.authFile.existingSecret }}
            - secret:
                name: {{ include "common.secrets.name" (dict "existingSecret" .Values.mailpit.ui.authFile.existingSecret "context" .) }}
                items:
                - key: {{ include "common.secrets.key" (dict "existingSecret" .Values.mailpit.ui.authFile.existingSecret "key" "ui.htpasswd") }}
                  path: ui.htpasswd
            {{- end }}
            {{- if and .Values.mailpit.smtp.authFile.enabled .Values.mailpit.smtp.authFile.existingSecret }}
            - secret:
                name: {{ include "common.secrets.name" (dict "existingSecret" .Values.mailpit.smtp.authFile.existingSecret "context" .) }}
                items:
                - key: {{ include "common.secrets.key" (dict "existingSecret" .Values.mailpit.smtp.authFile.existingSecret "key" "smtp.htpasswd") }}
                  path: smtp.htpasswd
            {{- end }}
            {{- if .Values.mailpit.ui.tls.enabled }}
            - secret:
                name: {{ .Values.mailpit.ui.tls.secretName | required "mailpit.ui.tls.secretName required when tls is enabled" }}
                items:
                - key: tls.crt
                  path: ui.crt
                - key: tls.key
                  path: ui.key
            {{- end }}
            {{- if .Values.mailpit.smtp.tls.enabled }}
            - secret:
                name: {{ .Values.mailpit.smtp.tls.secretName | required "mailpit.smtp.tls.secretName required when tls is enabled" }}
                items:
                - key: tls.crt
                  path: smtp.crt
                - key: tls.key
                  path: smtp.key
            {{- end }}
        {{- end }}
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ default (include "common.names.fullname" .) .Values.persistence.existingClaim }}
          {{- else }}
          emptyDir: {}
          {{- end }}
