apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-nginx
  labels:
    {{- include "frontend.release_labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.nginx.replicas }}
  selector:
    matchLabels:
      {{- include "frontend.release_selector_labels" $ | nindent 6 }}
      deployment: frontend
  template:
    metadata:
      labels:
        {{- include "frontend.release_labels" . | nindent 8 }}
        deployment: frontend
        silta-ingress: allow
      annotations:
        # We use a checksum to redeploy the pods when the configMap changes.
        configMap-checksum: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      enableServiceLinks: false
      containers:
      # Nginx container
      - name: nginx
        image: {{ .Values.nginx.image | quote }}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: web
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf # mount nginx-conf configmap volume to /etc/nginx
          readOnly: true
          subPath: nginx_conf
        - name: nginx-conf
          mountPath: /etc/nginx/conf.d/frontend.conf # mount nginx-conf configmap volume to /etc/nginx
          readOnly: true
          subPath: frontend_conf
        {{- if .Values.signalsciences.enabled }}
        - name: nginx-conf
          mountPath: /etc/nginx/modules/nginx_signalsciences.conf
          readOnly: true
          subPath: nginx_signalsciences_conf
        - name: sigsci-tmp
          mountPath: /sigsci/tmp
        {{- end }}
        {{- if .Values.nginx.extraConfig }}
        - name: nginx-conf
          # provide empty configuration file in /etc/nginx/conf.d for users to populate
          mountPath: /etc/nginx/conf.d/misc.conf
          readOnly: true
          subPath: extraConfig
        {{- end }}
        {{- if .Values.nginx.basicauth.enabled }}
        - name: nginx-basicauth
          mountPath: /etc/nginx/.htaccess
          readOnly: true
          subPath: .htaccess
        {{- end }}
        livenessProbe:
          tcpSocket:
            port: 8080
        readinessProbe:
          tcpSocket:
            port: 8080
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sleep", "15"]
        resources:
          {{ .Values.nginx.resources | toYaml | nindent 10 }}

      {{- if .Values.signalsciences.enabled }}
      # Signal Services container
      - name: sigsci
        image: {{ .Values.signalsciences.image }}:{{ .Values.signalsciences.imageTag }}
        imagePullPolicy: IfNotPresent
        env:
          - name: SIGSCI_ACCESSKEYID
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secrets-frontend
                key: signalsciences_accesskeyid
          - name: SIGSCI_SECRETACCESSKEY
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secrets-frontend
                key: signalsciences_secretaccesskey
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
          - name: sigsci-tmp
            mountPath: /sigsci/tmp
        lifecycle:
          preStop:
            exec:
              command: [ "/bin/sleep", "30" ]
        resources:
            {{- .Values.signalsciences.resources | toYaml | nindent 10 }}
        {{- end }}

      volumes:
        - name: nginx-conf
          configMap:
            name: {{ .Release.Name }}-nginx-conf
            items:
              - key: nginx_conf
                path: nginx_conf
              - key: frontend_conf
                path: frontend_conf
              {{- if .Values.signalsciences.enabled }}
              - key: nginx_signalsciences_conf
                path: nginx_signalsciences_conf
              {{- end }}
        {{- if .Values.nginx.basicauth.enabled }}
        - name: nginx-basicauth
          secret:
            secretName: {{ .Release.Name }}-secrets-frontend
            items:
              - key: .htaccess
                path: .htaccess
        {{- end }}
        {{- if .Values.signalsciences.enabled }}
        - name: sigsci-tmp
          emptyDir: { }
        {{- end }}
---
{{- if .Values.nginx.autoscaling.enabled }}
apiVersion: {{ include "frontend.autoscaling.api-version" . | trim }}
kind: HorizontalPodAutoscaler
metadata:
  name: {{ .Release.Name }}-nginx
  labels:
    {{- include "frontend.release_labels" . | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Release.Name }}-nginx
  minReplicas: {{ .Values.nginx.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.nginx.autoscaling.maxReplicas }}
  {{- if .Values.nginx.autoscaling.metrics }}
  metrics:
  {{- if eq ( include "frontend.autoscaling.api-version" . | trim ) "autoscaling/v2beta1" }}
  {{- range .Values.nginx.autoscaling.metrics }}
  - type: Resource
    resource:
      name: {{ .resource.name }}
      {{- if .resource.targetAverageUtilization }}
      targetAverageUtilization: {{ .resource.targetAverageUtilization }}
      {{- end }}
  {{- end }}
  {{- end }}
  {{- if eq ( include "frontend.autoscaling.api-version" . | trim ) "autoscaling/v2" }}
  {{- range .Values.nginx.autoscaling.metrics }}
  - type: Resource
    resource:
      name: {{ .resource.name }}
      {{- if .resource.targetAverageUtilization }}
      target:
        type: Utilization
        averageUtilization: {{ .resource.targetAverageUtilization }}
      {{- end }}
  {{- end }}
  {{- end }}
  {{- end }}
{{- end }}
